--- old/src/hotspot/share/oops/objArrayKlass.cpp	2018-09-26 14:03:51.000000000 +0200
+++ new/src/hotspot/share/oops/objArrayKlass.cpp	2018-09-26 14:03:50.000000000 +0200
@@ -171,15 +171,10 @@
 
 objArrayOop ObjArrayKlass::allocate(int length, TRAPS) {
   if (length >= 0) {
-    if (length <= arrayOopDesc::max_array_length(T_OBJECT)) {
-      int size = objArrayOopDesc::object_size(length);
-      return (objArrayOop)Universe::heap()->array_allocate(this, size, length,
-                                                           /* do_zero */ true, THREAD);
-    } else {
-      report_java_out_of_memory("Requested array size exceeds VM limit");
-      JvmtiExport::post_array_size_exhausted();
-      THROW_OOP_0(Universe::out_of_memory_error_array_size());
-    }
+    check_array_allocation_length(length, arrayOopDesc::max_array_length(T_OBJECT), CHECK_0);
+    int size = objArrayOopDesc::object_size(length);
+    return (objArrayOop)Universe::heap()->array_allocate(this, size, length,
+                                                         /* do_zero */ true, THREAD);
   } else {
     THROW_MSG_0(vmSymbols::java_lang_NegativeArraySizeException(), err_msg("%d", length));
   }
