--- old/src/share/vm/compiler/compileBroker.cpp	2015-12-13 22:45:27.000000000 +0100
+++ new/src/share/vm/compiler/compileBroker.cpp	2015-12-13 22:45:26.000000000 +0100
@@ -56,6 +56,7 @@
 #if INCLUDE_JVMCI
 #include "jvmci/jvmciCompiler.hpp"
 #include "jvmci/jvmciRuntime.hpp"
+#include "jvmci/jvmciJavaClasses.hpp"
 #include "runtime/vframe.hpp"
 #endif
 #ifdef COMPILER2
@@ -529,6 +530,18 @@
       } else {
         c1_count = JVMCIHostThreads;
       }
+
+      if (!UseInterpreter) {
+        // Force initialization of JVMCI compiler otherwise JVMCI
+        // compilations will not block until JVMCI is initialized
+        JVMCI_EXCEPTION_CONTEXT
+        ResourceMark rm;
+        TempNewSymbol getCompiler = SymbolTable::new_symbol("getCompiler", CHECK_ABORT);
+        TempNewSymbol sig = SymbolTable::new_symbol("()Ljdk/vm/ci/runtime/JVMCICompiler;", CHECK_ABORT);
+        Handle jvmciRuntime = JVMCIRuntime::get_HotSpotJVMCIRuntime(THREAD);
+        JavaValue result(T_OBJECT);
+        JavaCalls::call_virtual(&result, jvmciRuntime, HotSpotJVMCIRuntime::klass(), getCompiler, sig, CHECK_ABORT);
+      }
     }
   }
 #endif // INCLUDE_JVMCI
