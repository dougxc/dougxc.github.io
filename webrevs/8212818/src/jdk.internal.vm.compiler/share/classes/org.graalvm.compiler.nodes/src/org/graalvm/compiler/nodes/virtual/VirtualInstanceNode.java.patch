--- old/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/virtual/VirtualInstanceNode.java	2018-11-01 11:13:19.000000000 +0100
+++ new/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/virtual/VirtualInstanceNode.java	2018-11-01 11:13:18.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2011, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
@@ -42,22 +42,34 @@
     protected final ResolvedJavaType type;
     protected final ResolvedJavaField[] fields;
 
+    @OptionalInput private ValueNode baseObject;
+
     public VirtualInstanceNode(ResolvedJavaType type, boolean hasIdentity) {
         this(type, type.getInstanceFields(true), hasIdentity);
     }
 
+    public VirtualInstanceNode(ResolvedJavaType type, ValueNode baseObject) {
+        this(TYPE, type, type.getInstanceFields(true), true, baseObject);
+    }
+
     public VirtualInstanceNode(ResolvedJavaType type, ResolvedJavaField[] fields, boolean hasIdentity) {
-        this(TYPE, type, fields, hasIdentity);
+        this(TYPE, type, fields, hasIdentity, null);
     }
 
     protected VirtualInstanceNode(NodeClass<? extends VirtualInstanceNode> c, ResolvedJavaType type, boolean hasIdentity) {
-        this(c, type, type.getInstanceFields(true), hasIdentity);
+        this(c, type, type.getInstanceFields(true), hasIdentity, null);
     }
 
-    protected VirtualInstanceNode(NodeClass<? extends VirtualInstanceNode> c, ResolvedJavaType type, ResolvedJavaField[] fields, boolean hasIdentity) {
+    protected VirtualInstanceNode(NodeClass<? extends VirtualInstanceNode> c, ResolvedJavaType type, ResolvedJavaField[] fields, boolean hasIdentity, ValueNode baseObject) {
         super(c, type, hasIdentity);
         this.type = type;
         this.fields = fields;
+        this.baseObject = baseObject;
+    }
+
+    @Override
+    public ValueNode baseObject() {
+        return baseObject;
     }
 
     @Override
