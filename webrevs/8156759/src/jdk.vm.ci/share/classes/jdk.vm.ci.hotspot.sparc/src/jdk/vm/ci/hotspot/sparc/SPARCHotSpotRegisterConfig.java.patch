--- old/src/jdk.vm.ci/share/classes/jdk.vm.ci.hotspot.sparc/src/jdk/vm/ci/hotspot/sparc/SPARCHotSpotRegisterConfig.java	2016-05-12 09:40:38.000000000 +0200
+++ new/src/jdk.vm.ci/share/classes/jdk.vm.ci.hotspot.sparc/src/jdk/vm/ci/hotspot/sparc/SPARCHotSpotRegisterConfig.java	2016-05-12 09:40:38.000000000 +0200
@@ -78,7 +78,6 @@
 import jdk.vm.ci.code.RegisterConfig;
 import jdk.vm.ci.code.StackSlot;
 import jdk.vm.ci.code.TargetDescription;
-import jdk.vm.ci.common.JVMCIError;
 import jdk.vm.ci.hotspot.HotSpotCallingConventionType;
 import jdk.vm.ci.hotspot.HotSpotVMConfig;
 import jdk.vm.ci.meta.AllocatableValue;
@@ -211,7 +210,7 @@
         if (type == HotSpotCallingConventionType.JavaCallee) {
             return callingConvention(cpuCalleeParameterRegisters, returnType, parameterTypes, hotspotType, target);
         }
-        throw JVMCIError.shouldNotReachHere();
+        throw new InternalError("should not reach here");
     }
 
     @Override
@@ -230,7 +229,7 @@
             case Float:
                 return fpuFloatParameterRegisters;
             default:
-                throw JVMCIError.shouldNotReachHere("Unknown JavaKind " + kind);
+                throw new InternalError("Unknown JavaKind " + kind);
         }
     }
 
@@ -275,7 +274,7 @@
                     }
                     break;
                 default:
-                    throw JVMCIError.shouldNotReachHere();
+                    throw new InternalError("should not reach here");
             }
 
             if (locations[i] == null) {
