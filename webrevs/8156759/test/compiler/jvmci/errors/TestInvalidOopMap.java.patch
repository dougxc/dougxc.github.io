--- old/test/compiler/jvmci/errors/TestInvalidOopMap.java	2016-05-12 09:40:51.000000000 +0200
+++ new/test/compiler/jvmci/errors/TestInvalidOopMap.java	2016-05-12 09:40:51.000000000 +0200
@@ -29,7 +29,6 @@
  *          jdk.vm.ci/jdk.vm.ci.code.site
  *          jdk.vm.ci/jdk.vm.ci.meta
  *          jdk.vm.ci/jdk.vm.ci.runtime
- *          jdk.vm.ci/jdk.vm.ci.common
  * @compile CodeInstallerTest.java
  * @run junit/othervm -da:jdk.vm.ci... -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI compiler.jvmci.errors.TestInvalidOopMap
  */
@@ -46,7 +45,6 @@
 import jdk.vm.ci.code.site.Infopoint;
 import jdk.vm.ci.code.site.InfopointReason;
 import jdk.vm.ci.code.site.Site;
-import jdk.vm.ci.common.JVMCIError;
 import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;
 import jdk.vm.ci.hotspot.HotSpotReferenceMap;
 import jdk.vm.ci.hotspot.HotSpotVMConfig;
@@ -76,7 +74,7 @@
         test(null);
     }
 
-    @Test(expected = JVMCIError.class)
+    @Test(expected = InternalError.class)
     public void testInvalidReferenceMap() {
         test(new InvalidReferenceMap());
     }
@@ -96,12 +94,12 @@
         test(new HotSpotReferenceMap(new Location[0], new Location[0], null, 8));
     }
 
-    @Test(expected = JVMCIError.class)
+    @Test(expected = InternalError.class)
     public void testInvalidLength() {
         test(new HotSpotReferenceMap(new Location[1], new Location[2], new int[3], 8));
     }
 
-    @Test(expected = JVMCIError.class)
+    @Test(expected = InternalError.class)
     public void testInvalidShortOop() {
         PlatformKind kind = arch.getPlatformKind(JavaKind.Short);
         Register reg = getRegister(kind, 0);
@@ -113,10 +111,10 @@
         test(new HotSpotReferenceMap(oops, base, size, 8));
     }
 
-    @Test(expected = JVMCIError.class)
+    @Test(expected = InternalError.class)
     public void testInvalidNarrowDerivedOop() {
         if (!HotSpotVMConfig.config().useCompressedOops) {
-            throw new JVMCIError("skipping test");
+            throw new InternalError("skipping test");
         }
 
         PlatformKind kind = arch.getPlatformKind(JavaKind.Int);
