--- old/make/common/Modules.gmk	2018-04-18 11:08:30.000000000 +0200
+++ new/make/common/Modules.gmk	2018-04-18 11:08:29.000000000 +0200
@@ -76,6 +76,7 @@
 UPGRADEABLE_MODULES += \
     java.compiler \
     jdk.internal.vm.compiler \
+    jdk.internal.vm.compiler.management \
     #
 
 
@@ -103,7 +104,6 @@
     jdk.crypto.ec \
     jdk.dynalink \
     jdk.httpserver \
-    jdk.internal.vm.compiler.management \
     jdk.jsobject \
     jdk.localedata \
     jdk.naming.dns \
@@ -189,6 +189,7 @@
     jdk.hotspot.agent \
     jdk.internal.vm.ci \
     jdk.internal.vm.compiler \
+    jdk.internal.vm.compiler.management \
     #
 
 ################################################################################
--- old/src/java.management/share/classes/module-info.java	2018-04-18 11:08:32.000000000 +0200
+++ new/src/java.management/share/classes/module-info.java	2018-04-18 11:08:32.000000000 +0200
@@ -64,8 +64,7 @@
     exports sun.management.counter.perf to
         jdk.management.agent;
     exports sun.management.spi to
-        jdk.management,
-        jdk.internal.vm.compiler.management;
+        jdk.management;
 
     uses javax.management.remote.JMXConnectorProvider;
     uses javax.management.remote.JMXConnectorServerProvider;
--- old/src/jdk.internal.vm.compiler.management/share/classes/module-info.java	2018-04-18 11:08:35.000000000 +0200
+++ new/src/jdk.internal.vm.compiler.management/share/classes/module-info.java	2018-04-18 11:08:34.000000000 +0200
@@ -34,8 +34,5 @@
     requires jdk.management;
     requires jdk.internal.vm.ci;
     requires jdk.internal.vm.compiler;
-
-    provides sun.management.spi.PlatformMBeanProvider with
-        org.graalvm.compiler.hotspot.jmx.GraalMBeans;
 }
 
--- old/src/jdk.internal.vm.compiler.management/share/classes/org/graalvm/compiler/hotspot/jmx/GraalMBeans.java	2018-04-18 11:08:37.000000000 +0200
+++ /dev/null	2018-04-18 11:08:37.000000000 +0200
@@ -1,91 +0,0 @@
-/*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-package org.graalvm.compiler.hotspot.jmx;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import jdk.vm.ci.runtime.JVMCI;
-import jdk.vm.ci.runtime.JVMCICompiler;
-import jdk.vm.ci.runtime.JVMCIRuntime;
-import org.graalvm.compiler.hotspot.HotSpotGraalCompiler;
-import sun.management.spi.PlatformMBeanProvider;
-import sun.management.spi.PlatformMBeanProvider.PlatformComponent;
-
-public final class GraalMBeans extends PlatformMBeanProvider {
-    @Override
-    public List<PlatformComponent<?>> getPlatformComponentList() {
-        List<PlatformComponent<?>> components = new ArrayList<>();
-        try {
-            Object bean = findGraalRuntimeBean();
-            if (bean != null) {
-                components.add(new HotSpotRuntimeMBeanComponent(bean));
-            }
-        } catch (InternalError | LinkageError err) {
-            // go on and ignore
-        }
-        return components;
-    }
-
-    public static Object findGraalRuntimeBean() {
-        JVMCIRuntime r = JVMCI.getRuntime();
-        JVMCICompiler c = r.getCompiler();
-        if (c instanceof HotSpotGraalCompiler) {
-            return ((HotSpotGraalCompiler) c).mbean();
-        }
-        return null;
-    }
-
-    private static final class HotSpotRuntimeMBeanComponent implements PlatformComponent<Object> {
-
-        private final String name;
-        private final Object mbean;
-
-        HotSpotRuntimeMBeanComponent(Object mbean) {
-            this.name = "org.graalvm.compiler.hotspot:type=Options";
-            this.mbean = mbean;
-        }
-
-        @Override
-        public Set<Class<?>> mbeanInterfaces() {
-            return Collections.emptySet();
-        }
-
-        @Override
-        public Set<String> mbeanInterfaceNames() {
-            return Collections.emptySet();
-        }
-
-        @Override
-        public String getObjectNamePattern() {
-            return name;
-        }
-
-        @Override
-        public Map<String, Object> nameToMBeanMap() {
-            return Collections.<String, Object>singletonMap(name, mbean);
-        }
-    }
-}
